name: Build and Push Docker Image
description: |
  This action builds and pushes a Docker image to Google Artifact Registry.
  It uses Docker Buildx for building multi-platform images and Google Cloud authentication for pushing to Artifact
  Registry.
author: Reece Tech
branding:
  icon: package
  color: blue
inputs:
  project:
    description: The Google Cloud project ID.
    required: true
  project_number:
    description: The Google Cloud project number.
    required: true
  environment:
    description: The environment for the Docker image (e.g., dev, staging, prod).
    required: true
    default: dev
  region:
    description: The Google Cloud region for Artifact Registry.
    required: true
    default: australia-southeast1
  image_name:
    description: The name of the Docker image to build.
    required: false
    default: coursebox-action
  image_tag:
    description: The tag for the Docker image.
    required: false
    default: latest # This is not used in the action, but can be used for reference or future use.
  access_token_lifetime:
    description: The lifetime of the access token in seconds.
    required: false
    default: '1300' # 21 minutes, which is the maximum allowed by Google  Cloud for workload identity federation. 
    # This is used to ensure the token does not expire during the build process.
    # If you need a longer lifetime, you can set it to 3600 (1 hour) or 7200 (2 hours), but this is not recommended
    # as it may lead to security issues. The default value is set to 1300
    # to ensure the token is valid for the duration of the build process without exceeding the maximum
    # allowed lifetime. 
    # If you need to change this value, make sure to update the access_token_lifetime input in the action
    # and the access_token_lifetime parameter in the google-github-actions/auth action.
  workload_identity_pool_id:
    description: The ID of the workload identity pool.
    required: true
  workload_identity_provider_id:
    description: The ID of the workload identity provider.
    required: true
  organization:
    description: The GitHub organization for the ArgoCD repository.
    required: true
  gitops_repository:
    description: The name of the GitOps repository.
    required: true
  kustomize_directory:
    description: The directory containing kustomize files.
    required: true
  GH_APP_ID:
    description: The GitHub App ID used for authentication.
    required: true
  GH_APP_PRIVATE_KEY:
    description: The GitHub App private key used for authentication. Use a GitHub Actions secret to provide this value securely.
    required: false
# outputs:
#     image_tag_version:
#       description: 'Image tag version'
#       value: ${{ jobs.build.outputs.image_tag_version }}

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - id: auth
      name: Google Authentication
      uses: google-github-actions/auth@v0.6.0
      with:
        token_format: access_token
        workload_identity_provider: projects/${{ inputs.project_number }}/locations/global/workloadIdentityPools/${{ inputs.workload_identity_pool_id }}/providers/${{ inputs.workload_identity_provider_id }}
        service_account: github@${{ inputs.project }}.iam.gserviceaccount.com
        access_token_lifetime: 1300s

    - uses: docker/login-action@v1
      name: Docker Authentication
      with:
        registry: ${{ inputs.region }}-docker.pkg.dev
        username: oauth2accesstoken
        password: "${{ steps.auth.outputs.access_token }}"

    - uses: reecetech/version-increment@2024.10.1
      name: Version Patch
      id: version
      with:
        release_branch:  ${{ github.event_name != 'pull_request' &&  github.event.repository.default_branch || github.base_ref }}
        scheme: semver
        increment: patch

    - uses: docker/metadata-action@v4
      name: Prepare docker tag
      id: image_tag
      with:
        images: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ github.event.repository.name }}/${{ inputs.environment }}
        flavor: |
          latest=false
        tags: |
          type=semver,priority=900,pattern={{raw}},value=${{ steps.version.outputs.v-version }},enable=${{ github.ref_name == 'main' || startsWith(github.ref, 'refs/heads/release/hotfix-') }}

    - uses: docker/build-push-action@v3
      name: Build And Push
      with:
        push: true # ${{ github.event_name != 'pull_request'}}
        tags: ${{ steps.image_tag.outputs.tags }}

    # - name: Build and export
    #   uses: docker/build-push-action@v6
    #   with:
    #     push: false
    #     tags: ${{ steps.image_tag.outputs.tags }}
    #     outputs: type=docker,dest=${{ github.workspace }}/${{ steps.version.outputs.v-version }}.tar ## DELETE-ME-LATER

    # - name: list tar files
    #   shell: bash
    #   run: |
    #     ls -al ${{ github.workspace }}
    

    # - name: Upload artifact
    #   # if: github.event_name != 'pull_request'
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: docker-image
    #     path: ${{ github.workspace }}/${{ steps.version.outputs.v-version }}.tar

    - name: Set env
      id: tag
      shell: bash
      run: echo "DOCKER_IMAGE_TAG=${{ fromJSON(steps.image_tag.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_OUTPUT

    - name: Job Summary
      shell: bash
      run: |
        echo "### build version : ${{ fromJSON(steps.image_tag.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_STEP_SUMMARY


    - uses: actions/create-github-app-token@v1
      id: app-token
      name: Create github app token
      with:
        app-id: ${{ inputs.GH_APP_ID }}
        private-key: ${{ inputs.GH_APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}
        repositories: ${{ inputs.gitops_repository }}

    - uses: actions/checkout@v4
      name: Checkout ArgoCD repository
      with:
        token: ${{ steps.app-token.outputs.token }}
        repository: ${{ inputs.organization }}/${{ inputs.gitops_repository }} #'Coursebox-ai/ArgoCD.git'
        ref: "main"

    - if: ${{ github.event_name != 'pull_request' && github.event.action != 'opened' }}
      shell: bash
      name: Edit kustomize tag
      working-directory: ${{ inputs.kustomize_directory }}
      run: kustomize edit set image ${{ steps.image_tag.outputs.tags }}


      ## ONLY HAPPENS IN DEV
  # STEP 10.1 - COMMIT TO ARGOCD
    - name: Commit to ArgoCD
      uses: stefanzweifel/git-auto-commit-action@v5
      if: inputs.environment != 'europe' 
      with:
        commit_message: "${{github.event.repository.name}} - ${{ inputs.environment }} - ${{ fromJSON(steps.image_tag.outputs.json).labels['org.opencontainers.image.version'] }}"
        branch: main
        commit_options: '--no-verify --signoff'
        commit_user_name: github-actions[bot]
        commit_user_email: github-actions[bot]@users.noreply.github.com
        commit_author: GitHub Actions <github-actions[bot]@users.noreply.github.com> # defaults to author of the commit that triggered the run
        status_options: '--untracked-files=no'
        add_options: '-u'
        status_options: '--untracked-files=no'
        add_options: '-u'
        skip_dirty_check: false
        skip_fetch: false
        skip_checkout: false
        disable_globbing: true